stages:
  - build
  - deploy


build:
  stage: build
  variables:
    NODE_APP_INSTANCE: $CI_COMMIT_REF_NAME
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  only:
    - master
    - develop
  tags:
    - echo-linux


build.develop:
  stage: deploy
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  variables:
    CI_FULL_REGISTRY: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    NODE_ENV: production
    NODE_APP_INSTANCE: develop
    PORT: 36491
  script:
    - docker-compose -p bridge-develop up -d
  only:
    - develop
  tags:
    - bridge-dev
  environment:
    name: develop
    url: https://649-bridge-landing.pixelplex-test.by


build.master:
  stage: deploy
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  variables:
    CI_FULL_REGISTRY: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    NODE_ENV: production
    NODE_APP_INSTANCE: master
    PORT: 26491
  script:
    - docker-compose -p bridge-master up -d
  only:
    - master
  tags:
    - bridge-dev
  environment:
    name: stage
    url: https://649-bridge-landing.pixelplexlabs.com
